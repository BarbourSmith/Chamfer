{
    "atomType": "Molecule",
    "name": "Chamfer",
    "x": 0,
    "y": 0,
    "uniqueID": "0cbd00bf-fd66-4707-bfe9-75c3bb6c2f4f",
    "ioValues": [
        {
            "name": "Radius",
            "ioValue": 2
        },
        {
            "name": "Geometry",
            "ioValue": 10
        }
    ],
    "description": "Molecules provide an organizational structure to contain atoms. Double click on a molecule to enter it. Use the up arrow in the upper right hand corner of the screen to go up one level.",
    "topLevel": true,
    "allAtoms": [
        {
            "atomType": "Output",
            "name": "Output",
            "x": 0.98,
            "y": 0.5,
            "uniqueID": "5ea02981-5f6c-4476-a218-90471d7e83e4",
            "ioValues": [
                {
                    "name": "number or geometry",
                    "ioValue": "b31386bd-17c2-4fd8-a9a2-9912c32a3ca5"
                }
            ],
            "description": "Connect geometry here to make it available in the next level up. "
        },
        {
            "atomType": "Code",
            "name": "Code",
            "x": 0.43716931216931215,
            "y": 0.6452513966480448,
            "uniqueID": "b31386bd-17c2-4fd8-a9a2-9912c32a3ca5",
            "ioValues": [
                {
                    "name": "inputShape",
                    "ioValue": 10
                },
                {
                    "name": "radius",
                    "ioValue": 2
                }
            ],
            "description": "Defines a Replicad code block.",
            "codeVersion": 1,
            "code": " \n      //Inputs:[inputShape, radius]\n      //This defines the molecules inputs and creates variables with the same names which can be referenced in the code\n      \n      //Takes the address and gets the shape from the library\n      let importedShape = library[inputShape]\n      \n      //This makes a new copy of of the shape (to prevent garbage collection issues),\n      //and moves it in the X direction. Note that this will not work if the input is an assembly\n      let movedShape = importedShape.geometry[0].clone().chamfer(radius)\n      \n      \n      //Shapes stored in the library have tags, a color, a plane, and a bill of materials like this. We don't modify them here\n      let shape1 = {\n        geometry: [movedShape],\n        tags: importedShape.tags,\n        color: importedShape.color,\n        plane: importedShape.plane,\n        bom: importedShape.bom\n      }\n      \n      //We could at this point return shape1 as a complete shape and it will be automatically written to the library for us\n      return shape1\n      \n      \n      \n          /**\n          To Use the Code Atom, enter your inputs to the input list a.e Inputs:[shape, height]\n          If your input is connected to another atom with a replicad geometry you can access its geometry by looking up its ID in your library. a.e library[Input1].geometry[0] \n          Use any replicad available methods to modify your geometry. Learn more about all of the available methods at \n          https://replicad.xyz/docs/introapp/UserGuide.html \n          Return a replicad object that includes geometry, color, tags and plane. \n      \n      \n          Example Code Atom:\n      \n            Inputs:[shape, x];\n      \n            let finalShape = library[shape].geometry[0].clone.translate[x,0,0]\n      \n            return {geometry: finalShape, color: library[shape].color, plane: library[shape].plane, tags: library[shape].tags }\n      \n            - See more examples at _______ \n      \n      \n          */\n      "
        },
        {
            "atomType": "Rectangle",
            "name": "Rectangle",
            "x": 0.1574074074074074,
            "y": 0.223463687150838,
            "uniqueID": "8914c274-1abe-4c53-8fc3-af79fecfdd8d",
            "ioValues": [
                {
                    "name": "x length",
                    "ioValue": 10
                },
                {
                    "name": "y length",
                    "ioValue": 10
                }
            ],
            "description": "Creates a new rectangle."
        },
        {
            "atomType": "Extrude",
            "name": "Extrude",
            "x": 0.2744708994708995,
            "y": 0.4217877094972067,
            "uniqueID": "0dbb5616-0de8-48c7-80c7-60fbe6979925",
            "ioValues": [
                {
                    "name": "geometry",
                    "ioValue": "8914c274-1abe-4c53-8fc3-af79fecfdd8d"
                },
                {
                    "name": "height",
                    "ioValue": 10
                }
            ],
            "description": "Extrudes a 2D shape. Input can be negitive. "
        },
        {
            "atomType": "Input",
            "name": "Radius",
            "x": 0.029699999999999997,
            "y": 0.7541899441340782,
            "uniqueID": "9ab7090d-d33b-4f3a-90c9-dc28e0d77b56",
            "ioValues": [],
            "description": "Adds an input to the parent molecule. If the parent molecule is the top level of the project then the input will be available when the project is shared or imported into another project. Name is editable",
            "type": "number"
        },
        {
            "atomType": "Input",
            "name": "Geometry",
            "x": 0.029699999999999997,
            "y": 0.5055865921787709,
            "uniqueID": "fbebc8b2-c8a6-4491-a123-5113565afffb",
            "ioValues": [],
            "description": "Adds an input to the parent molecule. If the parent molecule is the top level of the project then the input will be available when the project is shared or imported into another project. Name is editable",
            "type": "number"
        }
    ],
    "allConnectors": [
        {
            "ap1Name": "geometry",
            "ap2Name": "number or geometry",
            "ap2Primary": false,
            "ap1ID": "b31386bd-17c2-4fd8-a9a2-9912c32a3ca5",
            "ap2ID": "5ea02981-5f6c-4476-a218-90471d7e83e4"
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "geometry",
            "ap2Primary": true,
            "ap1ID": "8914c274-1abe-4c53-8fc3-af79fecfdd8d",
            "ap2ID": "0dbb5616-0de8-48c7-80c7-60fbe6979925"
        },
        {
            "ap1Name": "number or geometry",
            "ap2Name": "radius",
            "ap2Primary": false,
            "ap1ID": "9ab7090d-d33b-4f3a-90c9-dc28e0d77b56",
            "ap2ID": "b31386bd-17c2-4fd8-a9a2-9912c32a3ca5"
        },
        {
            "ap1Name": "number or geometry",
            "ap2Name": "inputShape",
            "ap2Primary": false,
            "ap1ID": "fbebc8b2-c8a6-4491-a123-5113565afffb",
            "ap2ID": "b31386bd-17c2-4fd8-a9a2-9912c32a3ca5"
        }
    ],
    "unitsKey": "Unitless",
    "fileTypeVersion": 1,
    "compiledBom": {},
    "filetypeVersion": 1
}